FROM nvcr.io/nvidia/clara-holoscan/holoscan:v2.4.0-dgpu

ARG DEBIAN_FRONTEND=noninteractive

#
# Add PPAs (cmake)
#

RUN apt update && \
    apt install --no-install-recommends -y \
        ca-certificates \
        gpg \
        wget \
        && rm -rf /var/lib/apt/lists/*

RUN test -f /usr/share/doc/kitware-archive-keyring/copyright || \
    wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | \
    gpg --dearmor - | \
    tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null

RUN echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ jammy main' | \
    tee /etc/apt/sources.list.d/kitware.list >/dev/null

RUN apt update && \
    apt install --no-install-recommends -y \
        kitware-archive-keyring \
        && rm -rf /var/lib/apt/lists/*

RUN rm -fr $(whereis cmake)

#
# Global Dependencies
#

RUN apt update && \
    apt install --no-install-recommends -y \
        python3-dev \
        python3-pip \
        build-essential \
        pkg-config \
        cmake \
        git \
        g++-11 \
        gcc-11 \
        && rm -rf /var/lib/apt/lists/*
RUN python3 -m pip install ninja
RUN python3 -m pip install git+https://github.com/luigifcruz/meson.git@system-includes

#
# Clone Holohub
#

RUN git clone https://github.com/nvidia-holoscan/holohub.git /workspace/holohub && \
    cd /workspace/holohub && \
    git checkout 2fe24a6f91824733c4f37d3a1267e332ce3de1d9 && \
    git submodule update --init --recursive

#
# Advanced Network Operator
#

# Install DPDK (Advanced Network Dependency)

RUN apt update && \
    apt install --no-install-recommends -y \
        build-essential \
        python3-pyelftools \
        libnuma-dev \
        && rm -rf /var/lib/apt/lists/*

RUN wget -q https://fast.dpdk.org/rel/dpdk-23.11.tar.xz && \
    tar xf dpdk-23.11.tar.xz && \
    cd dpdk-23.11/ && \
    patch --ignore-whitespace --fuzz 3 \
        drivers/gpu/cuda/devices.h \
        /workspace/holohub/operators/advanced_network/dpdk_patches/devices.h.patch && \
    patch --ignore-whitespace --fuzz 3 \
        drivers/gpu/cuda/cuda.c \
        /workspace/holohub/operators/advanced_network/dpdk_patches/cuda.c.patch && \
    meson build -Dplatform=generic -Dc_args=-I/usr/local/cuda/include && \
    ninja -C build install

# Install Advanced Network Operator

RUN apt update && \
    apt install --no-install-recommends -y \
        pkg-config \
        && rm -rf /var/lib/apt/lists/*

COPY ./docker/patches /workspace/patches
RUN cd /workspace/holohub/operators/advanced_network && \
    patch -p1 < /workspace/patches/adv_networking_install.patch && \
    patch -p1 < /workspace/patches/adv_networking_multi.patch && \
    patch -p1 < /workspace/patches/adv_networking_free.patch && \
    rm -fr build && \
    mkdir build && \
    cd build && \
    cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release && \
    ninja install

#
# Install MatX
#

RUN git clone https://github.com/NVIDIA/MatX.git /workspace/MatX && \
    cd /workspace/MatX && \
    git checkout 419a1c3f840f64168b2a276b44e56cabfe7c36d9 && \
    git submodule update --init --recursive && \
    mkdir build && cd build &&\
    cmake -DMATX_BUILD_DOCS=OFF .. && \
    make -j && \
    make install

#
# Install HDF5 and GDS-VFD
#

RUN apt update && \
    apt install --no-install-recommends -y \
        libmpich-dev \
        && rm -rf /var/lib/apt/lists/*

RUN git clone https://github.com/HDFGroup/hdf5.git /workspace/hdf5 && \
    cd /workspace/hdf5 && \
    git checkout d4525d758f49da5972f34b1c53d189dcd9bcc3d0 && \
    git submodule update --init --recursive && \
    mkdir build && cd build && \
    cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr -DHDF5_ENABLE_PARALLEL=YES .. && \
    make -j && \
    make install

RUN git clone https://github.com/hpc-io/vfd-gds.git /workspace/vfd-gds && \
    cd /workspace/vfd-gds && \
    git checkout e33bae67a16238c2677f23abac76b9fe30b99869 && \
    git submodule update --init --recursive && \
    mkdir build && cd build &&\
    cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr .. && \
    make -j && \
    make install
